{"version":3,"file":"static/js/957.1ce82ca3.chunk.js","mappings":"8LACA,GAAgB,SAAW,6BAA6B,UAAY,8BAA8B,WAAa,gC,SCyB/G,EAvBmB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAAA,UAAf,SACGJ,EAASK,QAAQC,KAAI,SAAAC,GAAK,OACzB,eAAmBJ,UAAWC,EAAAA,UAA9B,UACE,UAAC,KAAD,CAAMI,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMV,GAAhD,WACE,gBACEW,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aAD5C,yEAIFC,IAAKP,EAAMQ,MACXC,MAAM,WAER,eAAIb,UAAWC,EAAAA,WAAf,SAA8BG,EAAMQ,YAX/BR,EAAME,GADU,KAkBhC,C,0FCxBD,EAA4B,8BAA5B,EAAuE,+BAAvE,EAAmH,+BAAnH,EAAiK,iCAAjK,EAA+M,+B,qECyE/M,EA/DmB,WACjB,OAAwCQ,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,IAAnC,eAAOM,EAAP,KAAcC,EAAd,KAEMC,EAAaJ,EAAaK,IAAI,UAEpCC,EAAAA,EAAAA,YAAU,WACHF,IAGLG,EAAAA,EAAAA,IAAkBH,GAAYI,OAAOA,KAAKV,EAC3C,GAAE,CAACM,KAEJE,EAAAA,EAAAA,YAAU,WACHJ,IAGLK,EAAAA,EAAAA,IAAkBL,GAAOM,OAAOA,KAAKV,EAEtC,GAAE,CAACE,IAeJ,OACE,iCACE,oBAASlB,UAAWC,EAApB,UACE,kBAAM0B,SAZU,SAAAC,GACpBA,EAAEC,iBACGT,EAILD,EAAgB,CAAEC,MAAAA,IAHhBU,EAAAA,GAAAA,KAAW,2BAId,EAKoC9B,UAAWC,EAA1C,WACE,kBACED,UAAWC,EACX8B,KAAK,OACLC,YAAY,YACZC,MAAOb,EACPc,SAtBa,SAAAN,GACrBP,EAASO,EAAEO,cAAcF,MAC1B,KAsBO,mBAAQF,KAAK,SAAS/B,UAAWC,EAAjC,UACE,SAAC,cAAD,CAAsBgC,MAAO,CAAEjC,UAAU,GAAD,OAAKC,IAA7C,UACE,SAAC,MAAD,cAKR,+BACGc,GAA+C,IAA/BA,EAAaqB,gBAC5B,qEAEDrB,IAAgB,SAACsB,EAAA,EAAD,CAAYxC,SAAUkB,SAI9C,C","sources":["webpack://goit-react-hw-05-movies/./src/Components/MoviesList/MoviesList.module.css?9dd2","Components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/Pages/MoviesPage/MoviesPage.module.css?c3ad","Pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardList\":\"MoviesList_cardList__8c+Gu\",\"movieCard\":\"MoviesList_movieCard__5oYAG\",\"movieTitle\":\"MoviesList_movieTitle__9VXBM\"};","import { Link, useLocation } from 'react-router-dom';\r\nimport s from './MoviesList.module.css';\r\n\r\nconst MoviesList = ({ response }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <ul className={s.movieList}>\r\n      {response.results.map(movie => (\r\n        <li key={movie.id} className={s.movieCard}>\r\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\r\n            <img\r\n              src={\r\n                movie.poster_path\r\n                  ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\r\n                  : `https://cdn.pixabay.com/photo/2016/03/31/18/36/cinema-1294496_1280.png`\r\n              }\r\n              alt={movie.title}\r\n              width=\"100px\"\r\n            />\r\n            <h3 className={s.movieTitle}>{movie.title}</h3>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default MoviesList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"moviePage\":\"MoviesPage_moviePage__xZcAj\",\"searchForm\":\"MoviesPage_searchForm__aRDjQ\",\"inputQuery\":\"MoviesPage_inputQuery__RpBUS\",\"searchButton\":\"MoviesPage_searchButton__AMtG8\",\"searchIcon\":\"MoviesPage_searchIcon__bmK1F\"};","\r\nimport MoviesList from '../../Components/MoviesList/';\r\nimport s from './MoviesPage.module.css';\r\nimport { GoSearch } from 'react-icons/go';\r\nimport { useEffect, useState } from 'react';\r\nimport { fetchSearchMovies } from '../../fetch';\r\nimport { toast } from 'react-toastify';\r\nimport { IconContext } from 'react-icons';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst MoviesPage = () => {\r\n  const [searchMovies, setSearchMovies] = useState(null);\r\n  const [searchParams, setSearchParams] = useSearchParams({});\r\n  const [query, setQuery] = useState('');\r\n\r\n  const queryValue = searchParams.get('query');\r\n\r\n  useEffect(() => {\r\n    if (!queryValue) {\r\n      return;\r\n    }\r\n    fetchSearchMovies(queryValue).then().then(setSearchMovies);\r\n  }, [queryValue]);\r\n\r\n  useEffect(() => {\r\n    if (!query) {\r\n      return;\r\n    }\r\n    fetchSearchMovies(query).then().then(setSearchMovies);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchParams]);\r\n\r\n  const onHandleChange = e => {\r\n    setQuery(e.currentTarget.value);\r\n  };\r\n\r\n  const onQuerySubmit = e => {\r\n    e.preventDefault();\r\n    if (!query) {\r\n      toast.warn('Please, enter movie name');\r\n      return;\r\n    }\r\n    setSearchParams({ query });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className={s.moviePage}>\r\n        <form onSubmit={onQuerySubmit} className={s.searchForm}>\r\n          <input\r\n            className={s.inputQuery}\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            value={query}\r\n            onChange={onHandleChange}\r\n          />\r\n          <button type=\"submit\" className={s.searchButton}>\r\n            <IconContext.Provider value={{ className: `${s.searchIcon}` }}>\r\n              <GoSearch />\r\n            </IconContext.Provider>\r\n          </button>\r\n        </form>\r\n      </section>\r\n      <section>\r\n        {searchMovies && searchMovies.total_results === 0 && (\r\n          <h2>There are no movies matching your search</h2>\r\n        )}\r\n        {searchMovies && <MoviesList response={searchMovies} />}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;"],"names":["response","location","useLocation","className","s","results","map","movie","to","id","state","from","src","poster_path","alt","title","width","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","query","setQuery","queryValue","get","useEffect","fetchSearchMovies","then","onSubmit","e","preventDefault","toast","type","placeholder","value","onChange","currentTarget","total_results","MoviesList"],"sourceRoot":""}